/*
 * Meshmoon WebRocket v1.5.8
 * www.adminotech.com / www.meshmoon.com
 *
 * Copyright Adminotech Ltd. 2013-2015 - All Rights Reserved.
 * No part of this script or any of its contents
 * may be used, reproduced, copied, modified or adapted,
 * without the prior written consent of the author.
 *
 * See included 3rd party libraries for their licenses.
 *
 * Commit   1.5.8-0-af30dbf
 * Date     20.7.2015 9:55:32 UTC
 * Meta     @preserve
 */
importScripts("http://meshmoon.s3.amazonaws.com/releases/webrocket/nightly/web-workers/IMeshmoonWebWorker.js");var CRS=Class.$extend({__init__:function(){this.EARTH_DIAMETER=12756274,this.EARTH_CIRCUMFERENCE=this.EARTH_DIAMETER*Math.PI,this.ORIGIN_SHIFT=this.EARTH_CIRCUMFERENCE/2,this.scale=1,this.originMeters={x:0,y:0}},setup:function(a,b){this.scale="number"==typeof a?a:1,b&&"number"==typeof b.x&&"number"==typeof b.y?(this.originMeters.x=b.x,this.originMeters.y=b.y):console.error("CRS.setup: Origin does not have x and y as numbers!")},latLonToMeters:function(a,b){var c=b*this.ORIGIN_SHIFT/180,d=Math.log(Math.tan((90+a)*Math.PI/360))/(Math.PI/180);return d=d*this.ORIGIN_SHIFT/180,{x:c,y:d}},metersToWorldPosition:function(a,b){return new THREE.Vector3((a-this.originMeters.x)/this.scale,0,-((b-this.originMeters.y)/this.scale))},latLonToWorldPosition:function(a,b){if("number"!=typeof a||"number"!=typeof b)return void console.error("CRS: lat/lon not a number:",a,b);var c=this.latLonToMeters(a,b);return this.metersToWorldPosition(c.x,c.y)}}),GlobalCRS=new CRS,Polygon=Class.$extend({__init__:function(){this.clear()},__classvars__:{Layer:{Exterior:1,Inner:2},Type:{GeometryCollection:"geometrycollection",Polygon:"polygon",LineString:"linestring",Arc:"arc",Point:"point"}},clear:function(){this.exterior=[],this.interiors=[],this.layer=void 0,this.lastShapeCoord=void 0},appendToShape:function(a,b,c){for(var d=0,e=c.length;e>d;d++){var f=c[d].x,g=c[d].y;if(void 0!==this.lastShapeCoord){if(b===Polygon.Type.Arc){if(void 0!==c[d+1]&&void 0!==c[d+2]){var h=c[d+1],i=c[d+2];a.quadraticCurveTo(h.x,h.y,i.x,i.y),d+=2,this.lastShapeCoord=i}}else{if(Math.abs(this.lastShapeCoord.x-f)<Number.EPSILON&&Math.abs(this.lastShapeCoord.y-g)<Number.EPSILON)continue;a.lineTo(f,g)}this.lastShapeCoord=c[d]}else a.moveTo(f,g),this.lastShapeCoord=c[d],b===Polygon.Type.Arc&&d--}},buildShape:function(a){try{for(var b=0;b<this.exterior.length;b++)this.appendToShape(a,this.exterior[b].type,this.exterior[b].coords);this.lastShapeCoord=void 0;for(var c=0;c<this.interiors.length;c++){var d=new THREE.Path;this.appendToShape(d,this.interiors[c].type,this.interiors[c].coords),a.holes.push(d),this.lastShapeCoord=void 0}return!0}catch(e){return console.error(e.stack||e),!1}},extrude:function(a,b){if("number"!=typeof a.amount&&(a.amount=10),"number"!=typeof a.curveSegments&&(a.curveSegments=6),"boolean"!=typeof a.bevelEnabled&&(a.bevelEnabled=!1),0===this.exterior.length)return console.error("Polygon.extrude: No Polygon.Layer.Exterion added"),null;var c=new THREE.Shape;if(!this.buildShape(c))return null;for(var d,e=c.extrude(a),f=0;f<e.vertices.length;++f)d=e.vertices[f].z,e.vertices[f].z=e.vertices[f].y,e.vertices[f].y=d,0!==b&&(e.vertices[f].y+=b);for(var g=0;g<e.faces.length;++g)d=e.faces[g].c,e.faces[g].c=e.faces[g].a,e.faces[g].a=d;if(e.computeFaceNormals(),e.computeBoundingBox(),0===b)for(var h=Array.isArray(e.faceVertexUvs)&&e.faceVertexUvs.length>0,i=e.faces.length-1;i>=0;i--)e.faces[i].normal.y+1<Number.EPSILON&&(e.faces.splice(i,1),h&&e.faceVertexUvs[0].splice(i,1));return delete c.holes,delete c.actions,delete c.curves,delete c.bends,delete c,e},computePivot:function(){for(var a=new THREE.Vector2(0,0),b=0,c=0;c<this.exterior.length;c++)for(var d=this.exterior[c],e=0,f=d.coords.length;f>e;e++)b++,a.add(d.coords[e]);return a.divideScalar(b)},create:function(a,b,c){return"number"!=typeof b||b<Polygon.Layer.Exterior||b>Polygon.Layer.Inner?void console.error("Polygon.create: Invalid layer:",b):(b===Polygon.Layer.Exterior?this.exterior.push({type:a,coords:[]}):this.interiors.push({type:a,coords:[]}),this.layer=b,void(Array.isArray(c)&&this.addLonLatCoordinates(c)))},addWorldPosition:function(a,b){var c=new THREE.Vector2(a,b);if(this.layer===Polygon.Layer.Exterior){var d=this.exterior.length-1;this.exterior[d].coords.push(c)}else{var d=this.interiors.length-1;this.interiors[d].coords.push(c)}},addLonLat:function(a,b){var c=GlobalCRS.latLonToMeters(b,a);c.x=(c.x-GlobalCRS.originMeters.x)/GlobalCRS.scale,c.y=-((c.y-GlobalCRS.originMeters.y)/GlobalCRS.scale),this.addWorldPosition(c.x,c.y)},addLonLatCoordinates:function(a){for(var b=0;b<a.length;b++)this.addLonLat(a[b][0],a[b][1])}}),HoleChecker=Class.$extend({__init__:function(){this.holes={}},isInHole:function(a){if(void 0===this.holes||!Array.isArray(this.holes.polygons)||0===this.holes.polygons.length)return!1;if(void 0===a.boundingBox)return console.warn("isInHole: Cannot check if in holes, no .boundingBox in Geometry"),!1;for(var b=0;b<this.holes.polygons.length;++b){var c=this.holes.polygons[b],d=[];if("coordinates"===c.type)for(var e=0;e<c.points.length;++e){var f=c.points[e],g=GlobalCRS.latLonToWorldPosition(f.lat,f.lon);d.push({x:g.x,y:g.z})}else"local"===c.type&&(d=c.points);if(!(d.length<2)){for(var h={x:a.boundingBox.min.x,y:a.boundingBox.min.z},i={x:a.boundingBox.max.x,y:a.boundingBox.max.z},j=[{x:h.x,y:h.y},{x:i.x,y:h.y},{x:i.x,y:i.y},{x:h.x,y:i.y}],k=[],e=0;e<j.length;++e){var l=j[e],m=j[e+1==j.length?0:e+1],n={x:l.x-m.x,y:l.y-m.y};k.push({x:-n.y,y:n.x})}for(var e=0;e<d.length;++e){var l=d[e],m=d[e+1==d.length?0:e+1],n={x:m.x-l.x,y:m.y-l.y};k.push({x:-n.y,y:n.x})}for(var o=!0,e=0;e<k.length;++e){var p=k[e],l=this.projectToAxis(j,p),m=this.projectToAxis(d,p);if(!this.overlap(l,m)){o=!1;break}}if(o)return!0}}return!1},overlap:function(a,b){return a.max>b.min?!0:a.min>b.max?!0:!1},dot2D:function(a,b){return a.x*b.x+a.y*b.y},projectToAxis:function(a,b){for(var c=this.dot2D(b,a[0]),d=c,e=0;e<a.length;++e){var f=this.dot2D(b,a[e]);c>f?c=f:f>d&&(d=f)}return{min:c,max:d}}}),MeshmoonGeoBuildings2DLoaderWorker=IMeshmoonWebWorker.$extend({__init__:function(){this.$super("Buildings2DLoader"),this.holeChecker=new HoleChecker},processConfiguration:function(a){this.holeChecker.holes=a.holes},processWorkOrder:function(a,b){GlobalCRS.setup(b.scale,b.origin),"geojson"===b.type&&this.processGeoJSON(a,b)},processGeoJSON:function(a,b){for(var c=[],d=null,e=0;e<a.features.length;++e){var f=this.processGeoJSONFeature(a.features[e],b);if(f){var g=this.holeChecker.isInHole(f);if(!g)if(d){var h=3*d.faces.length;d.merge(f),g=!0,c.push({start:h,end:3*d.faces.length,index:e})}else d=f,c.push({start:0,end:3*d.faces.length,index:e});g&&(f.dispose(),delete f)}}if(null!==d)try{for(var i=this.toBufferGeometry(d),j=i.attributes.position.array.length/i.attributes.position.itemSize,k=new Uint32Array(j),e=0;e<c.length;++e)for(var l=c[e],m=l.start;m<l.end;++m)k[m]=l.index;i.addAttribute("buildingIndex",new THREE.BufferAttribute(k,1));var n=[],o=[];for(var p in i.attributes)n.push(p),n.push(i.attributes[p].array),o.push(i.attributes[p].array.buffer);this.postWorkResult(n,b,o),d.dispose(),delete d,i.dispose(),delete i}catch(q){this.postWorkError("Exception while generating geometry "+q.toString(),b)}else this.postWorkError("No geometry in "+a.features.length+" features",b)},processGeoJSONFeature:function(a,b){var c="string"==typeof a.geometry.type?a.geometry.type.toLowerCase():void 0;if(c!==Polygon.Type.Polygon&&c!==Polygon.Type.LineString&&c!==Polygon.Type.GeometryCollection)return this.log.error("Unsupported GeoJSON geometry type '"+c+"'"),console.log("#1",a),null;try{return this.processGeoJSONGeometry(c.toLowerCase(),a,b)}catch(d){return console.error(d.stack||d),null}},appendGeometryToPolygon:function(a,b){var c=b.type.toLowerCase();if(c===Polygon.Type.LineString||c===Polygon.Type.Arc)this.appendToPolygon(a,c,Polygon.Layer.Exterior,b.coordinates);else{if(c!==Polygon.Type.Polygon)return c===Polygon.Type.Point?!1:(this.log.error("Unsupported GeoJSON geometry type '"+c+"'"),console.log("#2",b),!1);for(var d=0,e=b.coordinates.length;e>d;++d)this.appendToPolygon(a,c,0===d?Polygon.Layer.Exterior:Polygon.Layer.Inner,b.coordinates[d])}return!0},appendToPolygon:function(a,b,c,d){a.create(b,c,d)},processGeoJSONGeometry:function(a,b,c){var d=b.geometry,e=b.properties,f=new Polygon;if(a===Polygon.Type.GeometryCollection)for(var g=0,h=d.geometries.length;h>g;++g)this.appendGeometryToPolygon(f,d.geometries[g]);else if(!this.appendGeometryToPolygon(f,d))return null;var i=e&&"number"==typeof e.height,j=e&&"number"==typeof e.min_height,k=i?Math.max(.1,e.height):10,l=i&&j?e.min_height:0;j&&!i&&console.warn("Feature",b.id,"has 'min_height' but no 'height'",e),k-=l,0>=k&&(console.warn("Feature height is negative with height '"+k+"' min_height '"+l+"'. Reseting to default 10."),k=10,l=0),e&&"string"==typeof e.kind&&"no"===e.kind&&k>10&&(k=10,l=0);var m=f.extrude({amount:k},l);return f.clear(),m},toBufferGeometry:function(a,b){var c=new THREE.BufferGeometry;b=b||{vertexColors:THREE.NoColors};var d=a.vertices,e=a.faces,f=a.faceVertexUvs,g=b.vertexColors,h=f[0].length>0,i=3==e[0].vertexNormals.length,j=new Float32Array(3*e.length*3);c.addAttribute("position",new THREE.BufferAttribute(j,3));var k=new Float32Array(3*e.length*3);if(c.addAttribute("normal",new THREE.BufferAttribute(k,3)),g!==THREE.NoColors){var l=new Float32Array(3*e.length*3);c.addAttribute("color",new THREE.BufferAttribute(l,3))}if(h===!0){var m=new Float32Array(3*e.length*2);c.addAttribute("uv",new THREE.BufferAttribute(m,2))}for(var n=0,o=0,p=0;n<e.length;n++,o+=6,p+=9){var q=e[n],r=d[q.a],s=d[q.b],t=d[q.c];if(j[p]=r.x,j[p+1]=r.y,j[p+2]=r.z,j[p+3]=s.x,j[p+4]=s.y,j[p+5]=s.z,j[p+6]=t.x,j[p+7]=t.y,j[p+8]=t.z,i===!0){var u=q.vertexNormals[0],v=q.vertexNormals[1],w=q.vertexNormals[2];k[p]=u.x,k[p+1]=u.y,k[p+2]=u.z,k[p+3]=v.x,k[p+4]=v.y,k[p+5]=v.z,k[p+6]=w.x,k[p+7]=w.y,k[p+8]=w.z}else{var x=q.normal;k[p]=x.x,k[p+1]=x.y,k[p+2]=x.z,k[p+3]=x.x,k[p+4]=x.y,k[p+5]=x.z,k[p+6]=x.x,k[p+7]=x.y,k[p+8]=x.z}if(g===THREE.FaceColors){var y=q.color;l[p]=y.r,l[p+1]=y.g,l[p+2]=y.b,l[p+3]=y.r,l[p+4]=y.g,l[p+5]=y.b,l[p+6]=y.r,l[p+7]=y.g,l[p+8]=y.b}else if(g===THREE.VertexColors){var z=q.vertexColors[0],A=q.vertexColors[1],B=q.vertexColors[2];l[p]=z.r,l[p+1]=z.g,l[p+2]=z.b,l[p+3]=A.r,l[p+4]=A.g,l[p+5]=A.b,l[p+6]=B.r,l[p+7]=B.g,l[p+8]=B.b}if(h===!0){var C=f[0][n][0],D=f[0][n][1],E=f[0][n][2];m[o]=C.x,m[o+1]=C.y,m[o+2]=D.x,m[o+3]=D.y,m[o+4]=E.x,m[o+5]=E.y}}return c.computeBoundingSphere(),c},mergeBufferGeometry:function(a,b,c){if(b instanceof THREE.BufferGeometry==!1)return void conole.error("mergeBufferGeometry(): geometry not an instance of THREE.BufferGeometry.",b);void 0===c&&(c=0);var d=a.attributes;for(var e in d)if(void 0!==b.attributes[e])for(var f=d[e],g=f.array,h=b.attributes[e],i=h.array,j=h.itemSize,k=0,l=j*c;k<i.length;k++,l++)g[l]=i[k]}})();